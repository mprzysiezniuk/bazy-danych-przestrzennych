6)
INSERT INTO sklep.producenci(nazwa_producenta, mail, telefon) VALUES
('adidas', 'adidas@adidas.com', '123456789'),
('nike', 'nike@nike.com', '987654321'),
('sony', 'sony@sony.com', '111111111');

INSERT INTO sklep.produkty(nazwa_produktu, cena, id_producenta) VALUES
('predators cleats', 600, 1),
('messi cleats', 999, 1),
('nike tiempo', 300, 2),
('nike magista', 400, 2),
('playstation 5', 2000, 3),
('XPERIA 5', 3000, 3);

INSERT INTO sklep.zamowienia(id_produktu, data, ilosc) VALUES
(1, '11-23-2020', 1),
(2, '11-20-2020', 2),
(3, '11-19-2020, 2)
(4, '11-21-2020, 3)
(5, '11-22-2020, 1)
(6, '11-18-2020, 1);

7)
Kopia zapasowa stworzona przy pomocy pgAdmin4

8) 
DROP DATABASE s298269;

9)
Opcja restore w pgAdmin4

10)
Nazwa zmieniona przy pomocy pgAdmin4 w properties.

11)

a)
SELECT CONCAT('Producent: ', pr.nazwa_producenta, ', liczba zamowien: ', SUM(z.ilosc), ', wartosc zamowienia: ', SUM(z.ilosc*p.cena)) AS raport_producenci FROM sklep.produkty p JOIN sklep.producenci pr ON pr.id_producenta = p.producenci_id_producenta JOIN sklep.zamowienia z ON z.produkty_id_produktu = p.id_produktu GROUP BY pr.nazwa_producenta;

b)
SELECT CONCAT('Produkt: ', pr.nazwa_produktu, ', liczba zamowien: ', COUNT(z.id_zamowienia)) FROM sklep.zamowienia z RIGHT JOIN sklep.produkty pr ON pr.id_produktu = z.id_produktu GROUP BY pr.nazwa_produktu;

c)
SELECT * FROM sklep.produkty NATURAL JOIN sklep.zamowienia;

d)
OK

e)
SELECT * FROM zamowienia WHERE EXTRACT(MONTH FROM data) = 1; 

f)
SELECT EXTRACT(DOW FROM  data)AS day, SUM(ilosc) as sum FROM sklep.zamowienia GROUP BY day ORDER BY sum DESC;

g)
SELECT p.nazwa_produktu, SUM(z.ilosc) as sum FROM sklep.zamowienia z JOIN sklep.produkty p ON p.id_produktu=z.id_produktu GROUP BY p.nazwa_produktu ORDER BY sum DESC;

12)

a)
SELECT CONCAT('Produkt ', UPPER(p.nazwa_produktu), ', ktorego producentem jest ', LOWER(pr.nazwa_producenta), ', zamowiono ', COUNT(z.id_zamowienia), ' razy.') AS opis FROM sklep.zamowienia z RIGHT JOIN sklep.produkty p ON p.id_produktu = z.id_produktu JOIN sklep.producenci pr ON pr.id_producenta = p.id_producenta GROUP BY p.nazwa_produktu, pr.nazwa_producenta ORDER BY COUNT(z.id_zamowienia) DESC;

b)
SELECT z.*, pr.*, SUM(pr.cena * z.ilosc) AS wartosc FROM sklep.zamowienia z JOIN sklep.produkty pr ON pr.id_produktu = z.id_produktu GROUP BY z.id_zamowienia, pr.id_produktu ORDER BY wartosc DESC LIMIT (SELECT COUNT(*) FROM sklep.zamowienia) - 3;

c)
CREATE TABLE sklep.klienci(
    id_klienta serial NOT NULL,
    mail varchar(50)  NOT NULL,
    telefon varchar(9)  NOT NULL,
    CONSTRAINT klienci_pk PRIMARY KEY (id_klienta)
);

d)
ALTER TABLE sklep.zamowienia ADD COLUMN id_klienta INT REFERENCES sklep.klienci(id_klienta);
INSERT INTO klienci(email, telefon)
VALUES
('jan1.nowak@gmail.com', '999999999'),
('jan2.nowak@gmail.com', '888888888'),
('jan3.nowak@gmail.com', '777777777');
UPDATE sklep.zamowienia SET id_klienta = 1 WHERE id_zamowienia IN (1, 2, 3, 4, 5);
UPDATE sklep.zamowienia SET id_klienta = 2 WHERE id_zamowienia IN (6, 7, 8, 9, 10);
UPDATE sklep.zamowienia SET id_klienta = 3 WHERE id_zamowienia IN (11, 12, 13, 14, 15);

e)
SELECT k.*, p.nazwa_produktu, z.ilosc, z.ilosc*p.cena AS wartosc FROM sklep.zamowienia z RIGHT JOIN sklep.klienci k ON k.id_klienta = z.id_klienta JOIN sklep.produkty p ON p.produktu = z.id_produktu;

f)
SELECT CONCAT('NAJRZADZIEJ ZAMAWIAJACY: ', k.*, ', ilosc zamowien: ', COUNT(z.id_zamowienia) AS suma, ', wartosc: ', SUM(z.ilosc*p.cena)) FROM sklep.zamowienia z RIGHT JOIN sklep.klienci k ON k.id_klienta = z.id_klienta JOIN sklep.produkty p ON p.id_produktu = z.id_produktu GROUP BY z.id_klienta ORDER BY suma LIMIT 1;	

g)
DELETE FROM sklep.produkty WHERE id_produktu = (SELECT p.id_produktu FROM sklep.zamowienia z RIGHT OUTER JOIN sklep.produkty p ON z.id_produktu = p.id_produktu WHERE z.id_produktu IS NULL);

13)

a)
CREATE TABLE numer(
    liczba decimal(4,0)
);

b)
CREATE SEQUENCE liczba_seq INCREMENT 5 MINVALUE 0 MAXVALUE 125 START 100 CYCLE;

c)
insert into numer values(nextval('liczba_seq')); -- x7

d)
ALTER SEQUENCE liczba_seq INCREMENT 6;

e)
SELECT CURRVAL('liczba_seq'), NEXTVAL('liczba_seq');

f)
DROP SEQUENCE liczba_seq;

14)

a)
\du

b)
CREATE USER Superuser298269 SUPERUSER;
CREATE USER guest298279;
GRANT CONNECT ON DATABASE s298269 TO guest298269;
GRANT SELECT ON ALL TABLES IN SCHEMA firma TO guest298269;
GRANT SELECT ON ALL TABLES IN SCHEMA sklep TO guest298269;
\du

c)
ALTER USER Superuser298269 RENAME TO student;
ALTER USER student WITH NOSUPERUSER;
GRANT SELECT ON ALL TABLES IN SCHEMA firma TO student;
GRANT SELECT ON ALL TABLES IN SCHEMA sklep TO student;

15)

a)
BEGIN;
UPDATE sklep.produkty SET cena = cena + CAST(10 AS money);
COMMIT;

b)
BEGIN;
UPDATE sklep.produkty SET cena = 1.1*cena WHERE id_produktu = 3;
SAVEPOINT S1;
UPDATE sklep.zamowienia SET liczba_sztuk = 1.25*liczba_sztuk;
SAVEPOINT S2;
DELETE FROM sklep.klienci WHERE id_klienta IN (SELECT id_klienta FROM sklep.klienci k JOIN sklep.zamowienia z ON z.id_klienta = k.id_klienta JOIN produkty p ON z.id_produktu = p.id_produktu GROUP BY k.id_klienta ORDER BY SUM(p.cena*z.ilosc) DESC LIMIT 1);
ROLLBACK TO S1;
ROLLBACK TO S2;
ROLLBACK;
COMMIT;

c)
CREATE OR REPLACE FUNCTION udzial()
RETURNS TABLE (procent text) AS
$func$
BEGIN
	RETURN QUERY
	SELECT CONCAT(nazwa_producenta, ': ', (COUNT(z.id_zamowienia) / CAST((SELECT COUNT(*) FROM sklep.zamowienia) AS FLOAT))*100, '%') FROM sklep.producenci pr JOIN sklep.produkty p ON p.id_producenta = pr.id_producenta JOIN zamowienia z ON z.id_produktu = p.id_produktu GROUP BY (pr.id_producenta);
END
$func$ LANGUAGE plpgsql;

SELECT udzial();
